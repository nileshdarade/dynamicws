package com.nilesh.dynamicws;

import static spark.Spark.*;

import java.io.File;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'ndarade' at '7/8/16 1:39 PM' with Gradle 2.13
 *
 * @author ndarade, @date 7/8/16 1:39 PM
 */
public class Library {
	public boolean someLibraryMethod() {
		return true;
	}

	public static void main(String[] args) {
		get("/library", (req, res) -> {
			return new BookImpl().getName();
		});
		get("/library1", (req, res) -> {
			addSoftwareLibrary(new File(req.queryParams("jarName")));
			Class<?> c = Class.forName(req.queryParams("className"));
			Book obj = (Book) c.newInstance();
			return obj.getName();
		});

	}

	private static void addSoftwareLibrary(File file) throws Exception {
		System.out.println(file.getAbsolutePath());
		Method method = URLClassLoader.class.getDeclaredMethod("addURL", new Class[] { URL.class });
		method.setAccessible(true);
		method.invoke(ClassLoader.getSystemClassLoader(), new Object[] { file.toURI().toURL() });
	}

}
